name: repo pawall+ssr

on:
  push:
    paths:
      - '.github/workflows/wall.yml'
      - '.github/diy/**'
  schedule:
    - cron: 0 */12 * * *
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH Actions'
        required: false
        default: 'false'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id
    runs-on: ubuntu-latest

    name: Update ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [main]

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1 

    - name: Initialization environment
      run : |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"
        
    - name: Clone packages
      run: |
        cd $GITHUB_WORKSPACE
        git clone -b ${{matrix.target}} https://github.com/kenzok8/wall.git ${{matrix.target}}
        cd ${{matrix.target}}
        shopt -s extglob
        set +e
        git rm -r --cache * >/dev/null 2>&1 &
        rm -rf `find ./* -maxdepth 0 -type d ! -name ".github/diy"` >/dev/null 2>&1
        function git_clone() {
          git clone --depth 1 $1 $2
          if [ "$?" != 0 ]; then
            echo "error on $1"
            pid="$( ps -q $$ )"
            kill $pid
          fi
        }
        function git_sparse_clone() {
          branch="$1" rurl="$2" localdir="$3" && shift 3
          git clone -b $branch --depth 1 --filter=blob:none --sparse $rurl $localdir
          if [ "$?" != 0 ]; then
            echo "error on $rurl"
            pid="$( ps -q $$ )"
            kill $pid
          fi
          cd $localdir
          git sparse-checkout init --cone
          git sparse-checkout set $@
          mv -n $@ ../ || true
          cd ..
          rm -rf $localdir
          }
        function mvdir() {
        mv -n `find $1/* -maxdepth 0 -type d` ./
        rm -rf $1
        }
        (
        git clone --depth 1 https://github.com/fw876/helloworld && mv -n helloworld/luci-app-ssr-plus ./ ; rm -rf helloworld
        git clone --depth 1 https://github.com/xiaorouji/openwrt-passwall2 passwall2 && mv -n passwall2/luci-app-passwall2 ./;rm -rf passwall2
        git clone --depth 1 -b luci https://github.com/xiaorouji/openwrt-passwall passwall && mv -n passwall/luci-app-passwall ./;rm -rf passwall
        bash .github/diy/convert_translation.sh -a >/dev/null 2>&1 || true
        bash .github/diy/create_acl_for_luci.sh -a >/dev/null 2>&1 || true

    - name: Upload packages
      env: 
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        [ -e $GITHUB_WORKSPACE/LICENSE ] && cp $GITHUB_WORKSPACE/LICENSE $GITHUB_WORKSPACE/${{matrix.target}}
        [ -e $GITHUB_WORKSPACE/README.md ] && cp $GITHUB_WORKSPACE/README.md $GITHUB_WORKSPACE/${{matrix.target}}
        cd $GITHUB_WORKSPACE/${{matrix.target}}
        git add .
        git commit -am "update $(date +%Y-%m-%d" "%H:%M:%S)"
        git push --quiet "https://${{ secrets.ACCESS_TOKEN }}@github.com/kenzok8/wall.git" HEAD:${{matrix.target}}

      
